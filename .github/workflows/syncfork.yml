name: 'Usptream Sync'

on:
  schedule:
    - cron:  '0 7 * * 1,4'
    # scheduled at 07:00 every Monday and Thursday

  workflow_dispatch:  # click the button on Github repo!

# Required so we can push changes from upstream even if they changed their CI files
permissions:
  actions: write

jobs:
  sync-upstream:
    name: Sync latest commits from upstream repo
    runs-on: ubuntu-latest
    outputs:
      upstream-had-new-commits: "${{ steps.sync.outputs.has_new_commits }}"

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        ref: upstream
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: false
        # Full history to allow merging even with many new commits
        fetch-depth: 0

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.0
      with:
        target_sync_branch: upstream
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        upstream_sync_branch: master
        upstream_sync_repo: prometheus-community/windows_exporter
        upstream_pull_args: --tags # Make sure we pull tags as well so we know when a new release is out

        # Set test_mode true to run tests instead of the true action!!
        test_mode: false

    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."

    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."

    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}

  rebase-fork:
    name: Rebase our changes onto upstream
    runs-on: ubuntu-latest
    needs: sync-upstream
    if: needs.sync-upstream.outputs.upstream-had-new-commits == 'true'

    steps:
    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        ref: main
        persist-credentials: false
        fetch-depth: 0

    - name: Rebase upstream changes
      id: sync
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.0
      with:
        target_sync_branch: main
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        upstream_sync_branch: upstream
        upstream_sync_repo: hlb-online/windows_exporter
        git_config_pull_rebase: true
        target_push_args: '--force'
        target_branch_push_args: '--force'
        test_mode: false

    - name: New commits found
      if: steps.sync.outputs.has_new_commits == 'true'
      run: echo "New commits were found to sync."

    - name: No new commits
      if: steps.sync.outputs.has_new_commits == 'false'
      run: echo "There were no new commits."

    - name: Show value of 'has_new_commits'
      run: echo ${{ steps.sync.outputs.has_new_commits }}

